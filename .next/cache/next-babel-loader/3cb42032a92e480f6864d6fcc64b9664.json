{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// Component returning JSON-string as a tree\nimport React, { Component, useState, createRef } from \"react\";\n/*\n *  default jsonRules for rendering basic types\n */\n\nvar jsonRules = [\n/* null */\nfunction (name, value) {\n  return value === null ? __jsx(JsonString, {\n    name: name,\n    value: \"null\"\n  }) : null;\n},\n/* function */\nfunction (name, value) {\n  return typeof value === \"function\" ? __jsx(JsonFunc, {\n    name: name,\n    value: value\n  }) : null;\n},\n/* iso date-time */\nfunction (name, value) {\n  return typeof value === \"string\" && !isNaN(Date.parse(value)) ? __jsx(JsonDate, {\n    name: name,\n    value: value\n  }) : null;\n}, //\n\n/* url */\nfunction (name, value) {\n  return typeof value === \"string\" && (value.indexOf(\"http://\") === 0 || value.indexOf(\"https://\") === 0 || value.indexOf(\"www.\") === 0) ? __jsx(JsonLink, {\n    name: name,\n    value: value\n  }) : null;\n},\n/* string */\nfunction (name, value) {\n  return typeof value === \"string\" ? __jsx(JsonString, {\n    name: name,\n    value: value\n  }) : null;\n},\n/* integer */\nfunction (name, value) {\n  return typeof value === \"number\" ? __jsx(JsonInteger, {\n    name: name,\n    value: value\n  }) : null;\n},\n/* boolean */\nfunction (name, value) {\n  return typeof value === \"boolean\" ? __jsx(JsonBoolean, {\n    name: name,\n    value: value\n  }) : null;\n},\n/* iterator */\nfunction (name, value, depth) {\n  return typeof value === \"object\" && !Array.isArray(value) && typeof value[Symbol.iterator] === \"function\" ? __jsx(JsonArray, {\n    value: Array.from(value),\n    name: name + \"[iterable]\",\n    depth: depth\n  }) : null;\n},\n/* array */\nfunction (name, value, depth) {\n  return typeof value === \"object\" && Array.isArray(value) ? __jsx(JsonArray, {\n    depth: depth,\n    value: value,\n    name: name + \" [ \" + value.length + \" ] \"\n  }) : null;\n},\n/* object */\nfunction (name, value) {\n  return typeof value === \"object\" ? __jsx(JsonObject, {\n    value: value,\n    name: name + \" { \" + Object.keys(value).length + \" } \"\n  }) : null;\n}];\n/*\n *   json tree\n */\n\nvar Json = /*#__PURE__*/function (_Component) {\n  _inherits(Json, _Component);\n\n  var _super = _createSuper(Json);\n\n  function Json(props) {\n    var _this;\n\n    _classCallCheck(this, Json);\n\n    _this = _super.call(this, props);\n    _this.state = {}; // merge jsonRules with custom data\n\n    jsonRules = Array.prototype.concat(_this.props.jsonRules || [], jsonRules); // see if the parameter is json string or js obj\n\n    if (typeof _this.props.data === \"string\") {\n      try {\n        var obj = JSON.parse(_this.props.data);\n        _this._dataObject = obj;\n      } catch (err) {\n        throw \"Error: cannot convert json string to object. \" + err;\n        _this._dataObject = {};\n      }\n    } else if (typeof _this.props.data === \"object\") {\n      _this._dataObject = _this.props.data;\n    } else {\n      throw \"Error: Data is not in the expected format. provided data = \" + JSON.stringify(_this.props.data);\n    }\n\n    return _this;\n  }\n\n  _createClass(Json, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"Json\"\n      }, __jsx(KeyValue, _extends({\n        name: this.props.title || \"\",\n        value: this._dataObject\n      }, this.props)));\n    }\n  }]);\n\n  return Json;\n}(Component);\n\nJson.displayName = \"JsonTree\";\n/*\n *   key-value pairs\n */\n\nvar KeyValue = function KeyValue(props) {\n  var ret;\n\n  for (var i = 0; i < jsonRules.length; i++) {\n    var processed = jsonRules[i](props.name, props.value, props.depth);\n\n    if (processed) {\n      ret = processed;\n      break;\n    }\n  }\n\n  return ret;\n};\n\nKeyValue.displayName = \"KeyValue\";\n/*\n *  HideData panel component\n */\n\nvar HideData = function HideData(props) {\n  var _useState = useState(true),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var toggle = function toggle(e) {\n    e.preventDefault();\n    setOpen(!open);\n  };\n\n  return __jsx(\"div\", {\n    className: \"Json-Item\"\n  }, __jsx(\"div\", {\n    className: \"Json-Key\"\n  }, __jsx(\"a\", {\n    href: \"#\",\n    onClick: toggle,\n    className: \"HideData-Arrow\" + (open ? \" Open\" : \"\")\n  }, \"\\u25BC\"), __jsx(\"a\", {\n    href: \"#\",\n    onClick: toggle\n  }, open ? props.title + \":\" : props.title.includes(\"{\") ? \"{...}\" : \"[...]\")), __jsx(\"div\", {\n    className: \"HideData-Content Json-Value child-element\" + (open ? \"\" : \" Hidden\")\n  }, props.children));\n};\n\nvar JsonString = /*#__PURE__*/function (_Component2) {\n  _inherits(JsonString, _Component2);\n\n  var _super2 = _createSuper(JsonString);\n\n  function JsonString() {\n    var _this2;\n\n    _classCallCheck(this, JsonString);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super2.call.apply(_super2, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this2), \"state\", {\n      show: true,\n      hide: false,\n      text: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"_input\", /*#__PURE__*/createRef());\n\n    _defineProperty(_assertThisInitialized(_this2), \"click\", function () {\n      _this2.setState({\n        show: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"submitHandler\", function (e) {\n      e.preventDefault();\n      localStorage.setItem(\"text\", JSON.stringify(_this2._input.current.value));\n\n      _this2.setState(function (prevState) {\n        return {\n          hide: !prevState.hide,\n          text: JSON.parse(localStorage.getItem(\"text\"))\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"inputTag\", __jsx(\"form\", {\n      onSubmit: _this2.submitHandler\n    }, __jsx(\"input\", {\n      ref: _this2._input,\n      type: \"text\"\n    })));\n\n    return _this2;\n  }\n\n  _createClass(JsonString, [{\n    key: \"showText\",\n    value: function showText() {\n      return this.state.show ? __jsx(\"span\", {\n        style: {\n          cursor: \"pointer\"\n        },\n        className: \"Json-String\"\n      }, '\"' + this.props.value + '\"', \",\") : this.inputTag;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"Json-Item\"\n      }, __jsx(\"div\", {\n        className: \"Json-Key\"\n      }, this.props.name, \" : \"), __jsx(\"div\", {\n        onClick: this.click,\n        className: \"Json-Value\"\n      }, this.state.hide ? __jsx(\"span\", {\n        style: {\n          color: \"green\"\n        }\n      }, \"\\\"\", this.state.text, \"\\\"\") : this.showText()));\n    }\n  }]);\n\n  return JsonString;\n}(Component);\n\nJsonString.displayName = \"JsonString\";\n\nvar JsonLink = /*#__PURE__*/function (_JsonString) {\n  _inherits(JsonLink, _JsonString);\n\n  var _super3 = _createSuper(JsonLink);\n\n  function JsonLink() {\n    _classCallCheck(this, JsonLink);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(JsonLink, [{\n    key: \"showText\",\n    value: function showText() {\n      return __jsx(\"span\", {\n        className: \"Json-String\"\n      }, \"\\\"\", __jsx(\"a\", {\n        href: this.props.value,\n        target: \"_blank\"\n      }, this.props.value), \"\\\"\");\n    }\n  }]);\n\n  return JsonLink;\n}(JsonString);\n\nJsonLink.displayName = \"JsonLink\";\n\nvar JsonInteger = /*#__PURE__*/function (_JsonString2) {\n  _inherits(JsonInteger, _JsonString2);\n\n  var _super4 = _createSuper(JsonInteger);\n\n  function JsonInteger() {\n    _classCallCheck(this, JsonInteger);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(JsonInteger, [{\n    key: \"showText\",\n    value: function showText() {\n      return __jsx(\"span\", {\n        className: \"Json-Number\"\n      }, this.props.value);\n    }\n  }]);\n\n  return JsonInteger;\n}(JsonString);\n\nJsonInteger.displayName = \"JsonInteger\";\n\nvar JsonBoolean = /*#__PURE__*/function (_JsonString3) {\n  _inherits(JsonBoolean, _JsonString3);\n\n  var _super5 = _createSuper(JsonBoolean);\n\n  function JsonBoolean() {\n    _classCallCheck(this, JsonBoolean);\n\n    return _super5.apply(this, arguments);\n  }\n\n  _createClass(JsonBoolean, [{\n    key: \"showText\",\n    value: function showText() {\n      return __jsx(\"span\", {\n        className: \"Json-Number\"\n      }, JSON.stringify(this.props.value));\n    }\n  }]);\n\n  return JsonBoolean;\n}(JsonString);\n\nJsonString.displayName = \"JsonBoolean\";\n\nvar JsonDate = /*#__PURE__*/function (_JsonString4) {\n  _inherits(JsonDate, _JsonString4);\n\n  var _super6 = _createSuper(JsonDate);\n\n  function JsonDate() {\n    _classCallCheck(this, JsonDate);\n\n    return _super6.apply(this, arguments);\n  }\n\n  _createClass(JsonDate, [{\n    key: \"formatDate\",\n    value: function formatDate(dates) {\n      var today = new Date(dates);\n      var day = today.getDate();\n      var month = today.getMonth() + 1;\n      var year = today.getFullYear();\n      if (day < 10) return day = \"0\" + day;\n      if (month < 10) return month = \"0\" + month;\n      return day + \".\" + month + \".\" + year;\n    }\n  }, {\n    key: \"showText\",\n    value: function showText() {\n      return __jsx(\"span\", {\n        className: \"Json-Number\"\n      }, this.formatDate(this.props.value));\n    }\n  }]);\n\n  return JsonDate;\n}(JsonString);\n\nJsonDate.displayName = \"JsonDate\";\n\nvar JsonArray = /*#__PURE__*/function (_JsonString5) {\n  _inherits(JsonArray, _JsonString5);\n\n  var _super7 = _createSuper(JsonArray);\n\n  function JsonArray() {\n    var _this3;\n\n    _classCallCheck(this, JsonArray);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _super7.call.apply(_super7, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this3), \"state\", {\n      depth: _this3.props.depth,\n      color: \"#000\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this3), \"handleVisibility\", function () {\n      return _this3.setState({\n        depth: _this3.state.depth + (_this3.props.value.length - 1),\n        color: \"#00f\"\n      });\n    });\n\n    return _this3;\n  }\n\n  _createClass(JsonArray, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(HideData, _extends({}, this.props, {\n        title: this.props.name\n      }), __jsx(\"span\", {\n        className: \"array\"\n      }, \"[\"), this.props.value.slice(0, this.state.depth).map(function (item, index) {\n        return __jsx(KeyValue, {\n          name: index,\n          value: item,\n          key: item + \"-\" + index\n        });\n      }), this.state.depth < this.props.value.length && __jsx(\"span\", {\n        className: \"more-btn\",\n        onClick: this.handleVisibility,\n        style: {\n          color: this.state.color\n        },\n        title: \"Click to expand\"\n      }, \"...\"), __jsx(\"span\", {\n        className: \"array\"\n      }, \"]\"));\n    }\n  }]);\n\n  return JsonArray;\n}(JsonString);\n\nJsonArray.displayName = \"JsonArray\";\n\nvar JsonObject = /*#__PURE__*/function (_JsonString6) {\n  _inherits(JsonObject, _JsonString6);\n\n  var _super8 = _createSuper(JsonObject);\n\n  function JsonObject() {\n    _classCallCheck(this, JsonObject);\n\n    return _super8.apply(this, arguments);\n  }\n\n  _createClass(JsonObject, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return __jsx(HideData, _extends({}, this.props, {\n        title: this.props.name\n      }), __jsx(\"span\", {\n        className: \"array\"\n      }, \"{\"), Object.keys(this.props.value).map(function (item, index) {\n        return __jsx(KeyValue, {\n          name: item,\n          value: _this4.props.value[item],\n          key: item + \"_\" + index\n        });\n      }), __jsx(\"span\", {\n        className: \"array\"\n      }, \"}\"));\n    }\n  }]);\n\n  return JsonObject;\n}(JsonString);\n\nJsonObject.displayName = \"JsonObject\";\n\nvar JsonFunc = /*#__PURE__*/function (_JsonString7) {\n  _inherits(JsonFunc, _JsonString7);\n\n  var _super9 = _createSuper(JsonFunc);\n\n  function JsonFunc() {\n    _classCallCheck(this, JsonFunc);\n\n    return _super9.apply(this, arguments);\n  }\n\n  _createClass(JsonFunc, [{\n    key: \"nameHandler\",\n    value: function nameHandler() {\n      var regExpress = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\n      var regName = /([^\\s,]+)/g;\n      var endPoint = this.props.value.toString().replace(regExpress, \"\");\n      var result = endPoint.slice(endPoint.indexOf(\"(\") + 1, endPoint.indexOf(\")\")).match(regName);\n      if (result === null) result = [];\n      return result;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var code = this.props.value.toString().split(\"\\n\");\n      return __jsx(HideData, _extends({}, this.props, {\n        title: this.props.value.name + \"(\" + this.nameHandler() + \")\"\n      }), __jsx(\"div\", {\n        className: \"Json-Item Json-Func\"\n      }, code.map(function (each, index) {\n        return __jsx(\"div\", {\n          className: \"Json-Func-Line\",\n          key: \"each_\" + index\n        }, each);\n      })));\n    }\n  }]);\n\n  return JsonFunc;\n}(JsonString);\n\nJsonFunc.displayName = \"JsonFunc\";\nexport default Json;","map":null,"metadata":{},"sourceType":"module"}